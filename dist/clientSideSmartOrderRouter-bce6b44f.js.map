{"version":3,"file":"clientSideSmartOrderRouter-bce6b44f.js","sources":["../src/hooks/routing/transformSwapRouteToGetQuoteResult.ts","../src/hooks/routing/clientSideSmartOrderRouter.ts"],"sourcesContent":["import { Protocol } from '@uniswap/router-sdk'\nimport type { SwapRoute } from '@uniswap/smart-order-router'\nimport { QuoteResult, QuoteState, V2PoolInRoute, V3PoolInRoute } from 'state/routing/types'\nimport { isExactInput } from 'utils/tradeType'\n\n// from routing-api (https://github.com/Uniswap/routing-api/blob/main/lib/handlers/quote/quote.ts#L243-L311)\nexport function transformSwapRouteToGetQuoteResult({\n  quote,\n  quoteGasAdjusted,\n  route,\n  routeString,\n  estimatedGasUsed,\n  estimatedGasUsedQuoteToken,\n  estimatedGasUsedUSD,\n  gasPriceWei,\n  methodParameters,\n  blockNumber,\n  trade: { tradeType, inputAmount, outputAmount },\n}: SwapRoute & { routeString: string }): QuoteResult {\n  const routeResponse: Array<V3PoolInRoute[] | V2PoolInRoute[]> = []\n\n  for (const subRoute of route) {\n    const { amount, quote, tokenPath } = subRoute\n\n    if (subRoute.protocol === Protocol.V3) {\n      const pools = subRoute.route.pools\n      const curRoute: V3PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = isExactInput(tradeType) ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = isExactInput(tradeType) ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        curRoute.push({\n          type: 'v3-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          fee: nextPool.fee.toString(),\n          liquidity: nextPool.liquidity.toString(),\n          sqrtRatioX96: nextPool.sqrtRatioX96.toString(),\n          tickCurrent: nextPool.tickCurrent.toString(),\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    } else if (subRoute.protocol === Protocol.V2) {\n      const pools = subRoute.route.pairs\n      const curRoute: V2PoolInRoute[] = []\n      for (let i = 0; i < pools.length; i++) {\n        const nextPool = pools[i]\n        const tokenIn = tokenPath[i]\n        const tokenOut = tokenPath[i + 1]\n\n        let edgeAmountIn = undefined\n        if (i === 0) {\n          edgeAmountIn = isExactInput(tradeType) ? amount.quotient.toString() : quote.quotient.toString()\n        }\n\n        let edgeAmountOut = undefined\n        if (i === pools.length - 1) {\n          edgeAmountOut = isExactInput(tradeType) ? quote.quotient.toString() : amount.quotient.toString()\n        }\n\n        const reserve0 = nextPool.reserve0\n        const reserve1 = nextPool.reserve1\n\n        curRoute.push({\n          type: 'v2-pool',\n          tokenIn: {\n            chainId: tokenIn.chainId,\n            decimals: tokenIn.decimals,\n            address: tokenIn.address,\n            symbol: tokenIn.symbol,\n          },\n          tokenOut: {\n            chainId: tokenOut.chainId,\n            decimals: tokenOut.decimals,\n            address: tokenOut.address,\n            symbol: tokenOut.symbol,\n          },\n          reserve0: {\n            token: {\n              chainId: reserve0.currency.wrapped.chainId,\n              decimals: reserve0.currency.wrapped.decimals,\n              address: reserve0.currency.wrapped.address,\n              symbol: reserve0.currency.wrapped.symbol,\n            },\n            quotient: reserve0.quotient.toString(),\n          },\n          reserve1: {\n            token: {\n              chainId: reserve1.currency.wrapped.chainId,\n              decimals: reserve1.currency.wrapped.decimals,\n              address: reserve1.currency.wrapped.address,\n              symbol: reserve1.currency.wrapped.symbol,\n            },\n            quotient: reserve1.quotient.toString(),\n          },\n          amountIn: edgeAmountIn,\n          amountOut: edgeAmountOut,\n        })\n      }\n\n      routeResponse.push(curRoute)\n    }\n  }\n\n  const amount = isExactInput(tradeType) ? inputAmount : outputAmount\n  return {\n    state: QuoteState.SUCCESS,\n    data: {\n      methodParameters,\n      blockNumber: blockNumber.toString(),\n      amount: amount.quotient.toString(),\n      amountDecimals: amount.toExact(),\n      quote: quote.quotient.toString(),\n      quoteDecimals: quote.toExact(),\n      quoteGasAdjusted: quoteGasAdjusted.quotient.toString(),\n      quoteGasAdjustedDecimals: quoteGasAdjusted.toExact(),\n      gasUseEstimateQuote: estimatedGasUsedQuoteToken.quotient.toString(),\n      gasUseEstimateQuoteDecimals: estimatedGasUsedQuoteToken.toExact(),\n      gasUseEstimate: estimatedGasUsed.toString(),\n      gasUseEstimateUSD: estimatedGasUsedUSD.toExact(),\n      gasPriceWei: gasPriceWei.toString(),\n      route: routeResponse,\n      routeString,\n    },\n  }\n}\n","import { BaseProvider } from '@ethersproject/providers'\nimport { BigintIsh, CurrencyAmount, Token, TradeType } from '@uniswap/sdk-core'\nimport type { AlphaRouterConfig } from '@uniswap/smart-order-router'\n// This file is lazy-loaded, so the import of smart-order-router is intentional.\n// eslint-disable-next-line @typescript-eslint/no-restricted-imports\nimport {\n  AlphaRouter,\n  OnChainQuoteProvider,\n  routeAmountsToString,\n  StaticV2SubgraphProvider,\n  UniswapMulticallProvider,\n} from '@uniswap/smart-order-router'\nimport { SupportedChainId as ChainId } from 'constants/chains'\nimport { nativeOnChain } from 'constants/tokens'\nimport JSBI from 'jsbi'\nimport { GetQuoteArgs, QuoteResult, QuoteState } from 'state/routing/types'\nimport { isExactInput } from 'utils/tradeType'\n\nimport { transformSwapRouteToGetQuoteResult } from './transformSwapRouteToGetQuoteResult'\nimport { SwapRouterNativeAssets } from './types'\n\nconst AUTO_ROUTER_SUPPORTED_CHAINS: ChainId[] = Object.values(ChainId).filter((chainId): chainId is ChainId =>\n  Number.isInteger(chainId)\n)\n\nfunction isAutoRouterSupportedChain(chainId: ChainId | undefined): boolean {\n  return Boolean(chainId && AUTO_ROUTER_SUPPORTED_CHAINS.includes(chainId))\n}\n\n/** A cache of AlphaRouters, which must be initialized to a specific chain/provider. */\nconst routersCache = new WeakMap<BaseProvider, { [chainId: number]: AlphaRouter }>()\n\nfunction getRouter(chainId: ChainId, provider: BaseProvider): AlphaRouter {\n  const routers = routersCache.get(provider) || {}\n  const cached = routers[chainId]\n  if (cached) return cached\n\n  // V2 is unsupported for chains other than mainnet.\n  // TODO(zzmp): Upstream to @uniswap/smart-order-router, exporting an enum of supported v2 chains for clarity.\n  let v2SubgraphProvider\n  if (chainId !== ChainId.MAINNET) {\n    v2SubgraphProvider = new StaticV2SubgraphProvider(chainId)\n  }\n\n  // V3 computes on-chain, so the quoter must have gas limits appropriate to the provider.\n  // Most defaults are fine, but polygon needs a lower gas limit.\n  // TODO(zzmp): Upstream to @uniswap/smart-order-router, possibly making this easier to modify\n  // (eg allowing configuration without an instance to avoid duplicating multicall2Provider).\n  let onChainQuoteProvider\n  let multicall2Provider\n  if ([ChainId.POLYGON, ChainId.POLYGON_MUMBAI].includes(chainId)) {\n    multicall2Provider = new UniswapMulticallProvider(chainId, provider, 375_000)\n    // See https://github.com/Uniswap/smart-order-router/blob/98c58bdee9981fd9ffac9e7d7a97b18302d5f77a/src/routers/alpha-router/alpha-router.ts#L464-L487\n    onChainQuoteProvider = new OnChainQuoteProvider(\n      chainId,\n      provider,\n      multicall2Provider,\n      {\n        retries: 2,\n        minTimeout: 100,\n        maxTimeout: 1000,\n      },\n      {\n        multicallChunk: 10,\n        gasLimitPerCall: 5_000_000,\n        quoteMinSuccessRate: 0.1,\n      },\n      {\n        gasLimitOverride: 5_000_000,\n        multicallChunk: 5,\n      },\n      {\n        gasLimitOverride: 6_250_000,\n        multicallChunk: 4,\n      }\n    )\n  }\n\n  const router = new AlphaRouter({ chainId, provider, v2SubgraphProvider, multicall2Provider, onChainQuoteProvider })\n  routers[chainId] = router\n  routersCache.set(provider, routers)\n  return router\n}\n\nasync function getQuoteResult(\n  {\n    tradeType,\n    tokenIn,\n    tokenOut,\n    amount: amountRaw,\n  }: {\n    tradeType: TradeType\n    tokenIn: { address: string; chainId: number; decimals: number; symbol?: string }\n    tokenOut: { address: string; chainId: number; decimals: number; symbol?: string }\n    amount: BigintIsh | null\n  },\n  router: AlphaRouter,\n  routerConfig: Partial<AlphaRouterConfig>\n): Promise<QuoteResult> {\n  const tokenInIsNative = Object.values(SwapRouterNativeAssets).includes(tokenIn.address as SwapRouterNativeAssets)\n  const tokenOutIsNative = Object.values(SwapRouterNativeAssets).includes(tokenOut.address as SwapRouterNativeAssets)\n  const currencyIn = tokenInIsNative\n    ? nativeOnChain(tokenIn.chainId)\n    : new Token(tokenIn.chainId, tokenIn.address, tokenIn.decimals, tokenIn.symbol)\n  const currencyOut = tokenOutIsNative\n    ? nativeOnChain(tokenOut.chainId)\n    : new Token(tokenOut.chainId, tokenOut.address, tokenOut.decimals, tokenOut.symbol)\n\n  const baseCurrency = isExactInput(tradeType) ? currencyIn : currencyOut\n  const quoteCurrency = isExactInput(tradeType) ? currencyOut : currencyIn\n  const amount = CurrencyAmount.fromRawAmount(baseCurrency, JSBI.BigInt(amountRaw ?? '1')) // a null amountRaw should initialize the route\n  const route = await router.route(amount, quoteCurrency, tradeType, /*swapConfig=*/ undefined, routerConfig)\n\n  if (!amountRaw) return { state: QuoteState.INITIALIZED }\n  if (!route) return { state: QuoteState.NOT_FOUND }\n\n  return transformSwapRouteToGetQuoteResult({ ...route, routeString: routeAmountsToString(route.route) })\n}\n\nexport async function getClientSideQuoteResult(\n  {\n    tokenInAddress,\n    tokenInChainId,\n    tokenInDecimals,\n    tokenInSymbol,\n    tokenOutAddress,\n    tokenOutChainId,\n    tokenOutDecimals,\n    tokenOutSymbol,\n    amount,\n    tradeType,\n    provider,\n  }: GetQuoteArgs,\n  routerConfig: Partial<AlphaRouterConfig>\n) {\n  if (!isAutoRouterSupportedChain(tokenInChainId)) {\n    throw new Error(`Router does not support this token's chain (chainId: ${tokenInChainId}).`)\n  }\n\n  const router = getRouter(tokenInChainId, provider)\n  return getQuoteResult(\n    {\n      tradeType,\n      tokenIn: {\n        address: tokenInAddress,\n        chainId: tokenInChainId,\n        decimals: tokenInDecimals,\n        symbol: tokenInSymbol,\n      },\n      tokenOut: {\n        address: tokenOutAddress,\n        chainId: tokenOutChainId,\n        decimals: tokenOutDecimals,\n        symbol: tokenOutSymbol,\n      },\n      amount,\n    },\n    router,\n    routerConfig\n  )\n}\n"],"names":["transformSwapRouteToGetQuoteResult","_ref","quote","quoteGasAdjusted","route","routeString","estimatedGasUsed","estimatedGasUsedQuoteToken","estimatedGasUsedUSD","gasPriceWei","methodParameters","blockNumber","_ref$trade","trade","tradeType","inputAmount","outputAmount","routeResponse","_iterator","_createForOfIteratorHelper","_step","s","n","done","subRoute","value","amount","tokenPath","protocol","Protocol","V3","pools","curRoute","i","length","nextPool","tokenIn","tokenOut","edgeAmountIn","undefined","isExactInput","quotient","toString","edgeAmountOut","push","type","chainId","decimals","address","symbol","fee","liquidity","sqrtRatioX96","tickCurrent","amountIn","amountOut","V2","pairs","reserve0","reserve1","token","currency","wrapped","err","e","f","state","QuoteState","SUCCESS","data","amountDecimals","toExact","quoteDecimals","quoteGasAdjustedDecimals","gasUseEstimateQuote","gasUseEstimateQuoteDecimals","gasUseEstimate","gasUseEstimateUSD","AUTO_ROUTER_SUPPORTED_CHAINS","Object","values","ChainId","filter","Number","isInteger","isAutoRouterSupportedChain","Boolean","includes","routersCache","WeakMap","getRouter","provider","routers","get","cached","v2SubgraphProvider","MAINNET","StaticV2SubgraphProvider","onChainQuoteProvider","multicall2Provider","POLYGON","POLYGON_MUMBAI","UniswapMulticallProvider","OnChainQuoteProvider","retries","minTimeout","maxTimeout","multicallChunk","gasLimitPerCall","quoteMinSuccessRate","gasLimitOverride","router","AlphaRouter","set","getQuoteResult","_x","_x2","_x3","_getQuoteResult","apply","arguments","_asyncToGenerator","_regeneratorRuntime","mark","_callee","routerConfig","amountRaw","tokenInIsNative","tokenOutIsNative","currencyIn","currencyOut","baseCurrency","quoteCurrency","wrap","_callee$","_context","prev","next","SwapRouterNativeAssets","nativeOnChain","Token","CurrencyAmount","fromRawAmount","JSBI","BigInt","sent","abrupt","INITIALIZED","NOT_FOUND","_objectSpread","routeAmountsToString","stop","getClientSideQuoteResult","_x4","_x5","_getClientSideQuoteResult","_callee2","_ref2","tokenInAddress","tokenInChainId","tokenInDecimals","tokenInSymbol","tokenOutAddress","tokenOutChainId","tokenOutDecimals","tokenOutSymbol","_callee2$","_context2","Error","concat"],"mappings":"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"}